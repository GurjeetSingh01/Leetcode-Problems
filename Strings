QUESTION-1: VALID-PARENTHESES/

JAVA LEETCODE SOLUTION 

public class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
        for(int i = 0; i < s.length(); i++) {
            char a = s.charAt(i);
            if(a == '(' || a == '[' || a == '{') stack.push(a);
            else if(stack.empty()) return false;
            else if(a == ')' && stack.pop() != '(') return false;
            else if(a == ']' && stack.pop() != '[') return false;
            else if(a == '}' && stack.pop() != '{') return false;
        }
        return stack.empty();
    }
}



QUESTION-2: PRINT ALL THE DUPLICATES IN THE STRING/

JAVA SOLUTION

public class Main {
public static void main(String[] args) {
String sentence = "How many duplicates are there?";
String characters = "";
String duplicates = "";
for(int i =0; i<sentence.length(); i++){
String current = Character.toString(sentence.charAt(i));

if(characters.contains(current)){
if(!duplicates.contains(current)) {
duplicates += current + ", ";
}
}
characters += current; 
}
System.out.println(duplicates);
}
}
