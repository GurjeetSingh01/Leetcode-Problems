QUESTION 1: FIND THE DUPLICATE NUMBER

class Solution {
    public int findDuplicate(int[] nums){
        HashMap<Integer, Integer> map = new HashMap<>();
        int n = nums.length; 
        for(int i =0; i<nums.length; i++){
            if(map.containsKey(nums[i])) 
                return nums[i];
            else{
                map.put(nums[i],1);
            }
        }
        return -1; 
    }
}

QUESTION 2: SORT COLORS

class Solution {
    
public static void sortColors(int[] arr) {
int l=0;
int m=0; 
int h=arr.length-1;
while(m<=h)
{
    if(arr[m]==0){ //element is 0
        swap(arr,l,m);
        l++;
        m++;
    } else if(arr[m]==2){
        swap(arr,m,h);
        h--;
    }
    else m++;
}
  }
  
 private static void swap(int[] array, int i, int j) {
    int temp = array[i];
    array[i] = array[j];
    array[j] = temp;
  }
}

QUESTION 3: REMOVE DUPLICATES FROM SORTED ARRAY

class Solution {
    public int removeDuplicates(int[] nums) {
      if(nums.length == 0) return 0;
      int res = 1;
      for(int i = 1; i < nums.length; i++){
        if(nums[i] != nums[i - 1]){
          nums[res] = nums[i];
          res++;
        }
      }
      return res;
    }
}
